{"version":3,"sources":["Components/Card.js","Components/CardList.js","Components/SearchBox.js","Components/Scroll.js","Containers/App.js","reportWebVitals.js","index.js"],"names":["Card","id","name","email","className","alt","src","CardList","robots","map","user","SearchBox","searchChange","type","placeholder","onChange","Scroll","props","style","overflowY","border","height","children","App","onSeachChange","event","setState","searchfield","target","value","state","fetch","then","response","json","users","this","filteredRobots","filter","robot","toLowerCase","includes","toLocaleLowerCase","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2OAceA,EAZF,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,GAAIC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MACtB,OACI,sBAAKC,UAAU,sDAAf,UACI,qBAAKC,IAAI,QAAQC,IAAG,+BAA0BL,EAA1B,mBACpB,gCACI,6BAAKC,IACL,4BAAIC,WCILI,EATE,SAAC,GAEd,OAF2B,EAAZC,OAGJC,KAAK,SAAAC,GACR,OAAO,cAAC,EAAD,CAAMT,GAAIS,EAAKT,GAAIC,KAAMQ,EAAKR,KAAMC,MAAOO,EAAKP,YCOpDQ,EAZG,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,aAChB,OACI,qBAAKR,UAAU,MAAf,SACI,uBACAS,KAAK,SACLT,UAAU,oCACVU,YAAY,eACZC,SAAUH,OCCPI,G,MARA,SAACC,GACZ,OACI,qBAAKC,MAAO,CAAEC,UAAW,SAAUC,OAAO,kBAAmBC,OAAO,SAApE,SACKJ,EAAMK,aCyCJC,E,kDAtCX,aAAc,IAAD,8BACT,gBAcJC,cAAgB,SAACC,GACb,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAd1C,EAAKC,MAAQ,CACTtB,OAAQ,GACRmB,YAAa,IAJR,E,gEAQO,IAAD,OAEfI,MAAM,8CACLC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAElB,OAAQ2B,S,+BAOlC,IAAD,EAE4BC,KAAKN,MAA7BtB,EAFJ,EAEIA,OAAQmB,EAFZ,EAEYA,YACVU,EAAiB7B,EAAO8B,QAAQ,SAAAC,GAClC,OAAOA,EAAMrC,KAAKsC,cAAcC,SAASd,EAAYe,wBAGzD,OACI,sBAAKtC,UAAU,eAAf,UACI,oBAAIA,UAAU,KAAd,yBACA,cAAC,EAAD,CAAWQ,aAAcwB,KAAKZ,gBAC9B,cAAC,EAAD,UACI,cAAC,EAAD,CAAUhB,OAAQ6B,a,GAjCpBM,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,MCCdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACI,cAAC,EAAD,MAEJC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.8d2f38d9.chunk.js","sourcesContent":["import React from 'react';\n\nconst Card = ({ id, name, email }) => {    \n    return(\n        <div className=\"tc bg-light-green dib br3 pa3 ma2 grow bw2 shadow-5\">\n            <img alt=\"Robot\" src={`https://robohash.org/${id}?size=200x200`}/>\n            <div>\n                <h2>{name}</h2>\n                <p>{email}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Card;","import React from 'react';\nimport Card from './Card';\n\nconst CardList = ({robots}) => {\n        \n    return (\n        robots.map( user => {\n            return <Card id={user.id} name={user.name} email={user.email} />\n        })\n    )\n};\n\nexport default CardList;","import React from 'react';\n\nconst SearchBox = ({searchChange}) => {\n    return (\n        <div className=\"pa2\">\n            <input \n            type=\"search\"\n            className=\"pa3 ba b--green bg--lightest-blue\"\n            placeholder=\"search robot\"\n            onChange={searchChange} />\n        </div>        \n    )\n}\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflowY: 'scroll', border:'5px solid black', height:'800px' }}>\n            {props.children}\n        </div>\n    );\n}\n\nexport default Scroll;","import React, {Component} from 'react';\nimport CardList from '../Components/CardList';\nimport SearchBox from '../Components/SearchBox';\nimport './App.css';\nimport Scroll from '../Components/Scroll';\n\nclass App extends Component{\n    \n    constructor(){\n        super();\n        this.state = {\n            robots: [],\n            searchfield: ''\n        }\n    }\n\n    componentDidMount(){\n        \n        fetch('https://jsonplaceholder.typicode.com/users')\n        .then(response => response.json())\n        .then(users => this.setState({ robots: users }));       \n    }\n\n    onSeachChange = (event) => {\n        this.setState({ searchfield: event.target.value });\n    }\n\n    render(){\n\n        const { robots, searchfield } = this.state;\n        const filteredRobots = robots.filter( robot => {\n            return robot.name.toLowerCase().includes(searchfield.toLocaleLowerCase());\n        });\n\n        return (\n            <div className=\"container tc\">\n                <h1 className=\"f2\">RoboFriends</h1>\n                <SearchBox searchChange={this.onSeachChange}/>\n                <Scroll>\n                    <CardList robots={filteredRobots}/> \n                </Scroll>\n            </div>        \n        )\n    }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './Containers/App';\nimport reportWebVitals from './reportWebVitals';\nimport 'tachyons';\n\n\nReactDOM.render(\n  <React.StrictMode>    \n      <App/>          \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}